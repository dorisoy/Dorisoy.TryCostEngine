<MudBadge Color="Color.Secondary" Dot="true" Overlap="true" Visible="_newNotificationsAvailable">
    <MudMenu Icon="@Icons.Outlined.Notifications" Color="Color.Inherit" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter" PopoverClass="docs-layout-menu-shadow" ListClass="pa-2 docs-menu-list" LockScroll="true">
        <div class="d-flex justify-space-between align-center px-2">
            <MudText Typo="Typo.subtitle2">通知</MudText>
            <MudButton Disabled="@(_newNotificationsAvailable == false)" OnClick="MarkNotificationAsRead" StartIcon="@Icons.Filled.DoneAll" Variant="Variant.Text" Color="Color.Primary" Class="ml-16 mr-n2">标记已读</MudButton>
        </div>
        @if (_messages != null && _newNotificationsAvailable)
        {
           @* @foreach (var (message, isRead) in _messages.Take(5))
            {
                <MudMenuItem Class="px-2 py-0 rounded" Link="@($"/mud/announcements/{message.Id}")">
                    <MudText Typo="Typo.subtitle2">@message.Title</MudText>
                    <MudText Typo="Typo.body2">@($"{message.Authors.FirstOrDefault()?.DisplayName} • {message.PublishDate.ToString("MM/dd/yyyy")}")</MudText>
                </MudMenuItem>
                <MudDivider Class="my-2"/>
            }*@
        }
        else
        {
            <div class="d-flex justify-center align-center px-2 py-8 relative">
                <MudText Class="mud-text-secondary my-12">Nothing new :(</MudText>
                <MudBlazorLogo Class="docs-logo-filter mx-16 absolute"/>
            </div>
        }
    </MudMenu>
</MudBadge>

<MudTooltip Duration="1000" Text="@(LayoutService.IsDarkMode ? "切换亮主题" : "切换暗主题")">
    <MudIconButton Icon="@(LayoutService.IsDarkMode ? @Icons.Rounded.LightMode : @Icons.Material.Outlined.DarkMode)" Color="Color.Inherit" OnClick="@LayoutService.ToggleDarkMode"/>
</MudTooltip>